/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.ArrayList;
import java.sql.Date;
/**
 *
 * @author Alex Canfield
 */
public class View extends javax.swing.JFrame
{
    //attributes for one of the queries.
    private String fName;
    private String lName;

    /**
     * Creates new form View
     */
    public View()
    {
        initComponents();
        //make sure query 4, 5, 7components are not visible
        hideQuery4Boxes();
        hideQuery5Boxes();
        hideQuery7Boxes();
        hideQuery11Boxes();
        hideQuery15Boxes();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        queryBox = new javax.swing.JComboBox<>();
        selectButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultBox = new javax.swing.JTextArea();
        fNameBox = new javax.swing.JTextField();
        fNameLabel = new javax.swing.JLabel();
        lNameLabel = new javax.swing.JLabel();
        lNameBox = new javax.swing.JTextField();
        query4SearchButton = new javax.swing.JButton();
        dayLabel = new javax.swing.JLabel();
        dayBox = new javax.swing.JTextField();
        dateSelectButton = new javax.swing.JButton();
        monthLabel = new javax.swing.JLabel();
        monthBox = new javax.swing.JTextField();
        yearLabel = new javax.swing.JLabel();
        yearBox = new javax.swing.JTextField();
        invalidDateLabel = new javax.swing.JLabel();
        hallNameLabel = new javax.swing.JLabel();
        hallNameBox = new javax.swing.JTextField();
        hallSelectButton = new javax.swing.JButton();
        studentNoLabel = new javax.swing.JLabel();
        studentNoBox = new javax.swing.JTextField();
        studentNoButton = new javax.swing.JButton();
        lotLabel = new javax.swing.JLabel();
        lotBox = new javax.swing.JTextField();
        lotSelectButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("THE BEST DATABASE GUI EVER!!!!!!");

        queryBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        queryBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Query1: Hall Manager List", "Query2: Students and Lease Details", "Query3: Summer Lease Details", "Query4: Total Rent By Student", "Query5: Unpaid Students by Date", "Query6: Flats w/ Bad Inspection", "Query7: Students in a Hall", "Query8: Not Placed Students", "Query9: Number of Students per Category", "Query10: Students w/o Next Of Kin", "Query11: Advisor For Student", "Query12: Hall Price Statistics", "Query13: Rooms in Hall", "Query14: Staff Over 60", "Query15: Number of Cars in Lot" }));

        selectButton.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        selectButton.setText("Select");
        selectButton.setActionCommand("selectButton");
        selectButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                selectButtonActionPerformed(evt);
            }
        });

        resultBox.setColumns(20);
        resultBox.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        resultBox.setRows(5);
        jScrollPane1.setViewportView(resultBox);

        fNameBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        fNameLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        fNameLabel.setText("First Name: ");

        lNameLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lNameLabel.setText("Last Name: ");

        lNameBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        query4SearchButton.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        query4SearchButton.setText("Search");
        query4SearchButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                query4SearchButtonActionPerformed(evt);
            }
        });

        dayLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        dayLabel.setText("Day:");

        dayBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        dateSelectButton.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        dateSelectButton.setText("Select");
        dateSelectButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                dateSelectButtonActionPerformed(evt);
            }
        });

        monthLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        monthLabel.setText("Month:");

        monthBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        yearLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        yearLabel.setText("Year:");

        yearBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        invalidDateLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        invalidDateLabel.setText("Invalid Date values. Please try again.");

        hallNameLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        hallNameLabel.setText("Hall Name: ");

        hallNameBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        hallSelectButton.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        hallSelectButton.setText("Select");
        hallSelectButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                hallSelectButtonActionPerformed(evt);
            }
        });

        studentNoLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        studentNoLabel.setText("Student No:");

        studentNoBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        studentNoButton.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        studentNoButton.setText("Select");
        studentNoButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                studentNoButtonActionPerformed(evt);
            }
        });

        lotLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lotLabel.setText("Lot No:");

        lotBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        lotSelectButton.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lotSelectButton.setText("Select");
        lotSelectButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                lotSelectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(queryBox, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(selectButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(hallNameLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(hallNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dayLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dayBox, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(monthLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(monthBox, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(studentNoLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(studentNoBox, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(lNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(query4SearchButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(yearLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yearBox, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(dateSelectButton)
                                .addGap(41, 41, 41)
                                .addComponent(invalidDateLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(hallSelectButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(studentNoButton)
                                .addGap(85, 85, 85)
                                .addComponent(lotLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lotBox, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(lotSelectButton))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1441, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(queryBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fNameLabel)
                    .addComponent(lNameLabel)
                    .addComponent(lNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(query4SearchButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayLabel)
                    .addComponent(dayBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateSelectButton)
                    .addComponent(monthLabel)
                    .addComponent(monthBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearLabel)
                    .addComponent(yearBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invalidDateLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hallNameLabel)
                    .addComponent(hallNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hallSelectButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentNoLabel)
                    .addComponent(studentNoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentNoButton)
                    .addComponent(lotLabel)
                    .addComponent(lotBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lotSelectButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_selectButtonActionPerformed
    {//GEN-HEADEREND:event_selectButtonActionPerformed
        // TODO add your handling code here:
        //hide query-specific boxes and buttons
        hideQuery4Boxes();
        hideQuery5Boxes();
        hideQuery7Boxes();
        hideQuery11Boxes();
        hideQuery15Boxes();
        
        String query = queryBox.getSelectedItem().toString(); //get the text from the combo box.
        resultBox.setText(""); //clear the box
        
        //take action depending on selection.
        if(query.contains("Query1:"))
        {
            ArrayList<String> toShow = DataManager.query1();
            for(int i = 0; i < toShow.size(); i++)
            {
                resultBox.setText(resultBox.getText() + "\n" + toShow.get(i));
            }
        }
        else if(query.contains("Query2:"))
        {
            ArrayList<String> toShow = DataManager.query2();
            for(int i = 0; i < toShow.size(); i++)
            {
                resultBox.setText(resultBox.getText() + "\n" + toShow.get(i));
            }
        }
        else if(query.contains("Query3:"))
        {
            ArrayList<String> toShow = DataManager.query3();
            for(int i = 0; i < toShow.size(); i++)
            {
                resultBox.setText(resultBox.getText() + "\n" + toShow.get(i));
            }
        }
        else if(query.contains("Query4:"))
        {
            showQuery4Boxes();
        }
        else if(query.contains("Query5:"))
        {
            showQuery5Boxes();
        }
        else if(query.contains("Query6:"))
        {
            ArrayList<String> toShow = DataManager.query6();
            for(int i = 0; i < toShow.size(); i++)
            {
                resultBox.setText(resultBox.getText() + "\n" + toShow.get(i));
            }
        }
        else if(query.contains("Query7:"))
        {
            showQuery7Boxes();
        }
        else if(query.contains("Query8:"))
        {
            ArrayList<String> toShow = DataManager.query8();
            for(int i = 0; i < toShow.size(); i++)
            {
                resultBox.setText(resultBox.getText() + "\n" + toShow.get(i));
            }
        }
        else if(query.contains("Query9:"))
        {
            ArrayList<String> toShow = DataManager.query9();
            for(int i = 0; i < toShow.size(); i++)
            {
                resultBox.setText(resultBox.getText() + "\n" + toShow.get(i));
            }
        }
        else if(query.contains("Query10:"))
        {
            ArrayList<String> toShow = DataManager.query10();
            for(int i = 0; i < toShow.size(); i++)
            {
                resultBox.setText(resultBox.getText() + "\n" + toShow.get(i));
            }
        }
        else if(query.contains("Query11:"))
        {
            showQuery11Boxes();
        }
        else if(query.contains("Query12:"))
        {
            ArrayList<String> toShow = DataManager.query12();
            for(int i = 0; i < toShow.size(); i++)
            {
                resultBox.setText(resultBox.getText() + "\n" + toShow.get(i));
            }
        }
        else if(query.contains("Query13:"))
        {
            ArrayList<String> toShow = DataManager.query13();
            for(int i = 0; i < toShow.size(); i++)
            {
                resultBox.setText(resultBox.getText() + "\n" + toShow.get(i));
            }
        }
        else if(query.contains("Query14:"))
        {
            ArrayList<String> toShow = DataManager.query14();
            for(int i = 0; i < toShow.size(); i++)
            {
                resultBox.setText(resultBox.getText() + "\n" + toShow.get(i));
            }
        }
        else if(query.contains("Query15:"))
        {
            showQuery15Boxes();
        }
        //add your cases here Queries 8 - 15.
    }//GEN-LAST:event_selectButtonActionPerformed

    private void query4SearchButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_query4SearchButtonActionPerformed
    {//GEN-HEADEREND:event_query4SearchButtonActionPerformed
        // TODO add your handling code here:
        //get fname and last name
        resultBox.setText("");
        
        fName = fNameBox.getText();
        lName = lNameBox.getText();

        //make the query
        ArrayList<String> toShow = DataManager.query4(fName, lName);
        //show the results
        for(int i = 0; i < toShow.size(); i++)
        {
            resultBox.setText(resultBox.getText() + "\n" + toShow.get(i));
        }

    }//GEN-LAST:event_query4SearchButtonActionPerformed

    private void dateSelectButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_dateSelectButtonActionPerformed
    {//GEN-HEADEREND:event_dateSelectButtonActionPerformed
        // TODO add your handling code here:
        resultBox.setText("");
        
        Date selectedDate = processDateBoxes(); //get the date from entry boxes
        if(selectedDate != null) //if date is valid
        {
            resultBox.setText(selectedDate.toString()); //show date in result box
            ArrayList<String> toShow = DataManager.query5(selectedDate); //make query
            
            //display results of query
            for(int i = 0; i < toShow.size(); i++)
            {
                resultBox.setText(resultBox.getText() + "\n" + toShow.get(i));
            }

        }
    }//GEN-LAST:event_dateSelectButtonActionPerformed

    private void hallSelectButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_hallSelectButtonActionPerformed
    {//GEN-HEADEREND:event_hallSelectButtonActionPerformed
        // TODO add your handling code here:
        resultBox.setText("");
        
        String hallName = hallNameBox.getText(); //get name of hall from text box
        ArrayList<String> toShow = DataManager.query7(hallName); //make query
        
        //display results
        for(int i = 0; i < toShow.size(); i++)
        {
            resultBox.setText(resultBox.getText() + "\n" + toShow.get(i));
        }
        
    }//GEN-LAST:event_hallSelectButtonActionPerformed

    private void studentNoButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_studentNoButtonActionPerformed
    {//GEN-HEADEREND:event_studentNoButtonActionPerformed
        // TODO add your handling code here:
        resultBox.setText("");
        String input = studentNoBox.getText();
        
        try{
            int studentNum = Integer.parseInt(input);
            ArrayList<String> toShow = DataManager.query11(studentNum); //make query
        
            //display results
            for(int i = 0; i < toShow.size(); i++)
            {
                resultBox.setText(resultBox.getText() + "\n" + toShow.get(i));
            }
        }
        catch(NumberFormatException ex)
        {
            resultBox.setText("Invalid Input");
        }
        
    }//GEN-LAST:event_studentNoButtonActionPerformed

    private void lotSelectButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_lotSelectButtonActionPerformed
    {//GEN-HEADEREND:event_lotSelectButtonActionPerformed
        // TODO add your handling code here:
        resultBox.setText("");
        String input = lotBox.getText();
        
        try{
            int lotNum = Integer.parseInt(input);
            String toShow = DataManager.query15(lotNum); //make query
        
            //display results
            
            resultBox.setText(resultBox.getText() + "\n" + toShow);
            
        }
        catch(NumberFormatException ex)
        {
            resultBox.setText("Invalid Input");
        }
    }//GEN-LAST:event_lotSelectButtonActionPerformed

    //takes input from the date entry boxes and processes for validity. returns an sql date object. 
    public Date processDateBoxes()
    {
        try{
            int year = Integer.parseInt(yearBox.getText()); //process year 
            int day = Integer.parseInt(dayBox.getText()); //process day
            int month = Integer.parseInt(monthBox.getText()); //process month
            
            //if a day or year is not valid, throw an exception to the catch clause.
            if(month > 12 || month < 1 || day > 31 || day < 1)
            {
                throw new NumberFormatException();
            }
            
            Date toReturn = new Date(year - 1900, month - 1, day); //create the date to return
            invalidDateLabel.setVisible(false); //hide the invalid date alert from the user if it is not already hidden.
            return toReturn; //return the date
        }
        catch(NumberFormatException ex)
        {
            invalidDateLabel.setVisible(true); //alert the user that the date is invalid
        }
        
        return null;
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[])
//    {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try
//        {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
//            {
//                if ("Nimbus".equals(info.getName()))
//                {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex)
//        {
//            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex)
//        {
//            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex)
//        {
//            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex)
//        {
//            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable()
//        {
//            public void run()
//            {
//                new View().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dateSelectButton;
    private javax.swing.JTextField dayBox;
    private javax.swing.JLabel dayLabel;
    private javax.swing.JTextField fNameBox;
    private javax.swing.JLabel fNameLabel;
    private javax.swing.JTextField hallNameBox;
    private javax.swing.JLabel hallNameLabel;
    private javax.swing.JButton hallSelectButton;
    private javax.swing.JLabel invalidDateLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lNameBox;
    private javax.swing.JLabel lNameLabel;
    private javax.swing.JTextField lotBox;
    private javax.swing.JLabel lotLabel;
    private javax.swing.JButton lotSelectButton;
    private javax.swing.JTextField monthBox;
    private javax.swing.JLabel monthLabel;
    private javax.swing.JButton query4SearchButton;
    private javax.swing.JComboBox<String> queryBox;
    private javax.swing.JTextArea resultBox;
    private javax.swing.JButton selectButton;
    private javax.swing.JTextField studentNoBox;
    private javax.swing.JButton studentNoButton;
    private javax.swing.JLabel studentNoLabel;
    private javax.swing.JTextField yearBox;
    private javax.swing.JLabel yearLabel;
    // End of variables declaration//GEN-END:variables

    
    private void showQuery11Boxes()
    {
        studentNoBox.setVisible(true);
        studentNoButton.setVisible(true);
        studentNoLabel.setVisible(true);
    }
    
    private void hideQuery11Boxes()
    {
        studentNoBox.setVisible(false);
        studentNoButton.setVisible(false);
        studentNoLabel.setVisible(false);
    }
    
    private void showQuery15Boxes()
    {
        lotBox.setVisible(true);
        lotLabel.setVisible(true);
        lotSelectButton.setVisible(true);
    }
    
    private void hideQuery15Boxes()
    {
        lotBox.setVisible(false);
        lotLabel.setVisible(false);
        lotSelectButton.setVisible(false);
    }
    
    //displays the buttons and boxes relevant for query 4 information.
    private void showQuery4Boxes()
    {
        query4SearchButton.setVisible(true);
        lNameBox.setVisible(true);
        lNameLabel.setVisible(true);
        fNameLabel.setVisible(true);
        fNameBox.setVisible(true);
    }
    //displays the buttons and boxes relevant for query 5 information.
    private void showQuery5Boxes()
    {
        dayBox.setVisible(true);
        dayLabel.setVisible(true);
        monthBox.setVisible(true);
        monthLabel.setVisible(true);
        yearLabel.setVisible(true);
        yearBox.setVisible(true);
        dateSelectButton.setVisible(true);
    }
   
    //displays the buttons and boxes relevant for query 7 information.
    private void showQuery7Boxes()
    {
        hallNameBox.setVisible(true);
        hallSelectButton.setVisible(true);
        hallNameLabel.setVisible(true);
    }
    
    //hides entry controls for query 7
    private void hideQuery7Boxes()
    {
        hallNameBox.setVisible(false);
        hallSelectButton.setVisible(false);
        hallNameLabel.setVisible(false);
    }
    
    //hides entry controls for query 5
    private void hideQuery5Boxes()
    {
        dayBox.setVisible(false);
        dayLabel.setVisible(false);
        monthBox.setVisible(false);
        monthLabel.setVisible(false);
        yearLabel.setVisible(false);
        yearBox.setVisible(false);
        invalidDateLabel.setVisible(false);
        dateSelectButton.setVisible(false);
    }
    
    //hides entry controls for query 4
    public void hideQuery4Boxes()
    {
        query4SearchButton.setVisible(false);
        lNameBox.setVisible(false);
        lNameLabel.setVisible(false);
        fNameLabel.setVisible(false);
        fNameBox.setVisible(false);
    }

}
